name: Deploy to Server

on:
  push:
    branches:
      - main  # 当推送到main分支时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up pnpm and Node.js
        uses: pnpm/action-setup@v3
        with:
          version: 8
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'
      
      - name: Build Vue Frontend
        run: |
          cd frontend
          pnpm install
          pnpm run build
          echo "✓ 前端构建完成"
      
      - name: Deploy Backend to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e  # 遇到错误立即退出
            
            # 设置部署目录
            BACKEND_DIR="/root/detest"
            PROJECT_NAME="AutoTopicSum"
            
            echo "=== 开始部署后端 ==="
            
            # 创建后端部署目录（如果不存在）
            mkdir -p $BACKEND_DIR
            cd $BACKEND_DIR
            
            # 克隆或拉取最新代码
            if [ -d "$PROJECT_NAME/.git" ]; then
              echo "拉取最新代码..."
              cd $PROJECT_NAME
              git reset --hard
              git pull origin main
            else
              echo "克隆仓库..."
              rm -rf $PROJECT_NAME
              git clone https://github.com/${{ github.repository }}.git $PROJECT_NAME
              cd $PROJECT_NAME
            fi
            
            cd $BACKEND_DIR/$PROJECT_NAME/backend
            
            # 安装Python依赖
            echo "安装Python依赖..."
            pip install -r requirements.txt
            
            # 创建日志目录
            mkdir -p logs
            
            # 重启后端服务
            echo "重启后端服务..."
            sudo systemctl restart autotopicsum-backend.service
            sleep 2
            
            # 检查服务状态
            if sudo systemctl is-active --quiet autotopicsum-backend.service; then
              echo "✓ 后端服务运行正常"
              sudo systemctl status autotopicsum-backend.service --no-pager
            else
              echo "✗ 后端服务启动失败"
              sudo systemctl status autotopicsum-backend.service --no-pager
              exit 1
            fi
      
      - name: Copy Frontend to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "frontend/dist/*"
          target: "/root/frontend-temp/"
          strip_components: 2
      
      - name: Move Frontend to Target Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "部署前端文件..."
            
            # 清理目标目录
            rm -rf /www/wwwroot/de-test.linxin.blog/*
            
            # 移动文件到目标目录
            mv /root/frontend-temp/* /www/wwwroot/de-test.linxin.blog/
            
            # 清理临时目录
            rm -rf /root/frontend-temp
            
            # 设置正确的权限
            chmod -R 755 /www/wwwroot/de-test.linxin.blog/
            
            echo "✓ 前端部署完成"
            echo "前端地址: http://de-test.linxin.blog" 